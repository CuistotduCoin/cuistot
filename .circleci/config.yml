version: 2
jobs:
  deploy-admin:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "admin/yarn.lock" }}
      - run:
          name: Install dependencies
          command: |
            cd admin
            yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "admin/yarn.lock" }}
          paths:
            - ./node_modules
      - run: &install_awscli
          name: Install awscli
          working_directory: /
          command: |
            sudo curl -O https://bootstrap.pypa.io/get-pip.py
            sudo python2.7 get-pip.py
            sudo apt-get install python-pip libpython-dev groff
            sudo pip install awscli
      - run:
          name: Build admin
          command: |
            cd admin
            yarn build
      - run:
          name: Deploy admin to S3
          command: |
            cd admin
            yarn deploy-build
  
  deploy-front-prod:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - restore_cache: &restore_front_cache
          key: dependency-cache-{{ checksum "frontend/yarn.lock" }}
      - run: &install_front_dependencies
          name: Install dependencies
          command: |
            cd frontend
            sudo npm i -g serverless
            yarn install
      - save_cache: &save_front_cache
          key: dependency-cache-{{ checksum "frontend/yarn.lock" }}
          paths:
            - ./node_modules
      - run:
          name: Build frontend
          command: |
            cd frontend
            yarn build:prod
      - run:
          name: Deploy frontend
          command: |
            cd frontend
            yarn deploy:prod

  deploy-back-prod:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - restore_cache: &restore_back_cache
          key: dependency-cache-{{ checksum "backend/yarn.lock" }}
      - run: *install_awscli
      - run: &install_back_dependencies
          name: Install dependencies
          command: |
            cd backend
            sudo npm i -g serverless
            yarn install --production=false
            curl https://raw.githubusercontent.com/coinbase/assume-role/master/install-assume-role -O
            cat install-assume-role # inspect the script for security
            bash ./install-assume-role # install assume-role
            assume-role
      - save_cache: &save_back_cache
          key: dependency-cache-{{ checksum "backend/yarn.lock" }}
          paths:
            - ./node_modules
      - run:
          name: Deploy backend
          command: |
            cd backend
            yarn deploy:prod

  deploy-front-stage:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - restore_cache: *restore_front_cache
      - run: *install_front_dependencies
      - save_cache: *save_front_cache
      - run:
          name: Build frontend
          command: |
            cd frontend
            yarn build:stage
      - run:
          name: Deploy frontend
          command: |
            cd frontend
            yarn deploy:stage

  deploy-back-stage:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - restore_cache: *restore_back_cache
      - run: *install_back_dependencies
      - save_cache: *save_back_cache
      - run:
          name: Deploy backend
          command: |
            cd backend
            yarn deploy:stage

workflows:
  version: 2
  deploy:
    jobs:
      - deploy-admin:
          filters:
            branches:
              only:
                - master
      - deploy-front-prod:
          filters:
            branches:
              only:
                - master
      - deploy-back-prod:
          filters:
            branches:
              only:
                - feature/setup_deployment # to remove
                - master
      - deploy-front-stage:
          filters:
            branches:
              only:
                - release/*
      - deploy-back-stage:
          filters:
            branches:
              only:
                - release/*
